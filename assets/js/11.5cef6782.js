(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{214:function(t,n,s){"use strict";s.r(n);var i=s(28),e=Object(i.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("table",[s("thead",[s("tr",[s("th",[t._v("Tables")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Are")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("Cool")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("col 3 is")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("right-aligned")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("$1600")])]),t._v(" "),s("tr",[s("td",[t._v("col 2 is")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("centered")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("$12")])]),t._v(" "),s("tr",[s("td",[t._v("zebra stripes")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("are neat")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("$1")])])])]),t._v(" "),s("h2",{attrs:{id:"全局安装nrm，nrm只是单纯提供了几个常用的下载包的地址，并能够在这几个地址之间切换，但是安装包的命令还是npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局安装nrm，nrm只是单纯提供了几个常用的下载包的地址，并能够在这几个地址之间切换，但是安装包的命令还是npm"}},[t._v("#")]),t._v(" 全局安装nrm，nrm只是单纯提供了几个常用的下载包的地址，并能够在这几个地址之间切换，但是安装包的命令还是npm")]),t._v(" "),s("ul",[s("li",[t._v("npm i nrm -g")])]),t._v(" "),s("h2",{attrs:{id:"查看当前所有可用的镜像源地址以及当前所用的镜像源地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看当前所有可用的镜像源地址以及当前所用的镜像源地址"}},[t._v("#")]),t._v(" 查看当前所有可用的镜像源地址以及当前所用的镜像源地址")]),t._v(" "),s("ul",[s("li",[t._v("nrm ls\nnpm -------- https://registry.npmjs.org/\nyarn ------- https://registry.yarnpkg.com/\ncnpm ------- http://r.cnpmjs.org/")])]),t._v(" "),s("ul",[s("li",[t._v("taobao ----- https://registry.npm.taobao.org/\nnj --------- https://registry.nodejitsu.com/\nnpmMirror -- https://skimdb.npmjs.com/registry/\nedunpm ----- http://registry.enpmjs.org/")])]),t._v(" "),s("h2",{attrs:{id:"切换npm安装包时的镜像源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换npm安装包时的镜像源"}},[t._v("#")]),t._v(" 切换npm安装包时的镜像源")]),t._v(" "),s("ul",[s("li",[t._v("nrm use npm  切换到npm源")])]),t._v(" "),s("h2",{attrs:{id:"安装使用webpack-4-42-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装使用webpack-4-42-0"}},[t._v("#")]),t._v(" 安装使用webpack@4.42.0")]),t._v(" "),s("ol",[s("li",[t._v("全局安装\nnpm i webpack -g")]),t._v(" "),s("li",[t._v("项目安装,在项目根目录中运行，安装成开发依赖\nnpm i webpack --save-dev  (--save-dev可以简写为-D开发依赖， --save可以简写为-S普通依赖)")]),t._v(" "),s("li",[t._v("webpack 4x以上，webpack将命令相关的内容都放到了webpack-cli，所以还需要安装webpack-cli\nnpm install --global webpack-cli")]),t._v(" "),s("li",[t._v("webpack -v\n能够显示版本号就是安装好了")])]),t._v(" "),s("p",[t._v("NOTE： 当使用npm安装一些全局的软件包时，不知道安装到了什么位置，可以使用命令 npm root -g 进行查询")]),t._v(" "),s("p",[t._v("4.42.0的webpack打包文件实现下面命令\n"),s("code",[t._v("webpack .\\src\\main.js -o .\\dist\\bundle.js --mode development")])]),t._v(" "),s("p",[t._v("////////\npip freeeze > requirements.txt 要在虚拟环境下使用")]),t._v(" "),s("p",[t._v("nginx 启动  nginx\nnginx 重启  nginx -s reload 启动好像也可以\n查看nginx进程  ps -aux|grep nginx\n要观察客户端对nginx的访问记录使用(在/var/log/nginx目录下) tail -f nginx-uwsgi.log 查看")]),t._v(" "),s("p",[t._v("uwsgi是装在虚拟环境下，命令需要在虚拟环境下执行\n启动uwsgi 在python虚拟环境下在uwsgi.ini文件所在目录下执行uwsgi --ini uwsgi.ini\n查看uwsgi的进程 ps -aux|grep uwsgi\n查看当前django服务的uwsgi所在的进程号 到uwsgi.pid所在目下执行 cat uwsgi.pid\n重启uwsgi uwsgi --reload uwsgi.pid\n停止uwsgi uwsgi --stop uwsgi.pid\n要观察客户端对uwsgi的访问记录使用(在项目的uwsg文件夹下) tail -f uwsgi.log 查看")]),t._v(" "),s("p",[t._v("django项目依据models创建数据库: 1.makrations(前提是数据库中已经有这个数据库了比如 testlabmanagement) 2. migrate\n创建超级用户 createsuperuser")]),t._v(" "),s("p",[t._v("linux下django项目搜集静态文件\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static/')\npython manage.py collectstatic")]),t._v(" "),s("p",[t._v("pwd linux中查看当前目录")]),t._v(" "),s("h2",{attrs:{id:"系统中原来装了两个python-现在在windows的shell中或者在pycharm的terminal中输入python命令后都启动的是python-2-7-现在希望默认启动另一个安装的版本3-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统中原来装了两个python-现在在windows的shell中或者在pycharm的terminal中输入python命令后都启动的是python-2-7-现在希望默认启动另一个安装的版本3-7"}},[t._v("#")]),t._v(" 系统中原来装了两个python, 现在在windows的shell中或者在pycharm的Terminal中输入python命令后都启动的是python 2.7, 现在希望默认启动另一个安装的版本3.7")]),t._v(" "),s("ol",[s("li",[t._v('去 This PC -> Right-click -> Click on Properties -> Advanced System Settings.您将看到System Properties。从这里导航到"Advanced"选项卡->单击Environment Variables。看到上半部分为用户变量和下半部分的System variables。选中，System Variables然后双击Path（以编辑路径）。')]),t._v(" "),s("li",[t._v("发现只有'C:\\Python27'和'C:\\Python27\\Scripts'; 依次New两个条目'C:\\Users\\u243216\\AppData\\Local\\Programs\\Python\\Python37'和'C:\\Users\\u243216\\AppData\\Local\\Programs\\Python\\Python37\\Scripts'并移至python27的前面。")]),t._v(" "),s("li",[t._v("重新启动命令提示符或者重启pycharm打开内置的Terminal，现在检查Python版本时，正确显示所需的版本3.7。")])]),t._v(" "),s("h2",{attrs:{id:"pycharm中运行同一个python程序时选择平行窗口运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pycharm中运行同一个python程序时选择平行窗口运行"}},[t._v("#")]),t._v(" PyCharm中运行同一个python程序时选择平行窗口运行")]),t._v(" "),s("h3",{attrs:{id:"问题描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),s("p",[t._v("当我们进行Socket编程时，客户端可能有多个，原则上如果有n个客户端，那么我们就要编辑n个客户端的代码。然而其实我们每个客户端的代码都是相同，如果编辑n遍，将会相当的浪费空间。")]),t._v(" "),s("h3",{attrs:{id:"解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法")]),t._v(" "),s("p",[t._v("学了并发编程，我们知道，每一个程序重新运行时都是一个新的进程，那么只要我们把客户端运行设置为：重新打开一个平行的窗口运行而不是关闭当前窗口重新运行，就可实现多个客户端的效果。设置方法如下：pycharm工具栏----\x3erun----\x3eEdit Configurations----\x3eAllow parallal run（在右上角的位置），勾上它即代表重新运行时是开一个新的窗口。")]),t._v(" "),s("h3",{attrs:{id:"pycharm中使用eclipse快捷键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pycharm中使用eclipse快捷键"}},[t._v("#")]),t._v(" pycharm中使用Eclipse快捷键")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("alt + 左右箭头 在代码之间切换")])]),t._v(" "),s("li",[s("p",[t._v("alt + 上下箭头 将光标所在行代码上移或者下移")])]),t._v(" "),s("li",[s("p",[t._v("ctrl + D 删除一行")])]),t._v(" "),s("li",[s("p",[t._v("ctrl + F 搜索代码")])]),t._v(" "),s("li",[s("p",[t._v("ctrl + H Find in Path")])]),t._v(" "),s("li",[s("p",[t._v("tab  空出4空格")])]),t._v(" "),s("li",[s("p",[t._v("shit + tab  和tab相反")])]),t._v(" "),s("li",[s("p",[t._v("home end 定位光标到所在行的头和尾")])]),t._v(" "),s("li",[s("p",[t._v("shift + home/end 选取光标位置到本行头和尾的代码")])]),t._v(" "),s("li",[s("p",[t._v("shift + ctrl + home/end 选取光标位置到文件头和尾的代码")])]),t._v(" "),s("li",[s("p",[t._v("ctrl + o 看到本文件有哪些类和方法")])]),t._v(" "),s("li",[s("p",[t._v("shift + ctrl + r 调出搜索窗口")])])]),t._v(" "),s("h2",{attrs:{id:"win10-64位安装mysql-5-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#win10-64位安装mysql-5-7"}},[t._v("#")]),t._v(" win10 64位安装mysql 5.7")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("下载5.7 免安装版 2选1")]),t._v(" "),s("ul",[s("li",[t._v("https://dev.mysql.com/downloads/mysql/5.7.html#downloads 选择mysql-5.7.30-winx64.zip 64位")]),t._v(" "),s("li",[t._v("https://downloads.mysql.com/archives/community/  选择mysql-5.7.26-winx64  (以这个版本为例)")])])]),t._v(" "),s("li",[s("p",[t._v("解压并创建my.ini在根目录 'C:\\Users\\u243216\\Desktop\\mysql-5.7.26-winx64'")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  [client]\n  # 设置mysql客户端默认字符集\n  default-character-set=utf8\n  [mysqld]\n  # 设置3306端口\n  port = 3306\n  # 设置mysql的安装目录 这块换成自己解压的路径\n  basedir=C:\\\\Users\\\\u243216\\\\Desktop\\\\mysql-5.7.26-winx64\n  # 允许最大连接数\n  max_connections=200\n  # 服务端使用的字符集默认为8比特编码的latin1字符集\n  character-set-server=utf8\n  # 创建新表时将使用的默认存储引擎\n  default-storage-engine=INNODB\n")])])]),s("p",[t._v("主要修改下basedir后的路径，注意路径中为双反斜杠'\\'而非单反斜杠''")])]),t._v(" "),s("li",[s("p",[t._v("以管理员的方式打开cmd命令窗口，并且进入到mysql安装目录的bin目录下\n'cd C:\\Users\\u243216\\Desktop\\mysql-5.7.26-winx64\\bin'")])]),t._v(" "),s("li",[s("p",[t._v("运行 mysqld --initialize 此时应该没有任何提示\nmysqld --initialize会帮助你创建data文件夹并初始化mysql, 因此不要自己创建data文件夹")])]),t._v(" "),s("li",[s("p",[t._v("执行 mysqld -install 安装mysql服务")])]),t._v(" "),s("li",[s("p",[t._v("执行 net start mysql 启动服务\n第一次进入mysql会由 mysql initialize 初始化一个密码, 在data/*.err这个文件中搜索password会看到生成的密码")])]),t._v(" "),s("li",[s("p",[t._v("注册环境变量与登录\n在环境变量的系统变量中的path 新建一个环境变量,值为bin路径 'C:\\Users\\u243216\\Desktop\\mysql-5.7.26-winx64\\bin'\n输入 'mysql -u root -p' 用刚才看到的密码登录")])]),t._v(" "),s("li",[s("p",[t._v("进入后可以用如下命令修改，这里密码改为root\n'ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';'")])]),t._v(" "),s("li",[s("p",[t._v("在mysql中运行退出命令quit'mysql> quit'")])])]),t._v(" "),s("h2",{attrs:{id:"windows下python虚拟环境安装和配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows下python虚拟环境安装和配置"}},[t._v("#")]),t._v(" windows下python虚拟环境安装和配置")]),t._v(" "),s("ul",[s("li",[t._v("pip install virtualenvwrapper-win")]),t._v(" "),s("li",[t._v("pip install virtualenv 这步也许不用,装virtualenvwrapper-win的时候可能就会装virtualenv")]),t._v(" "),s("li",[t._v("mkvirtualenv -p C:\\Users\\u243216\\AppData\\Local\\Programs\\Python\\Python37\\python.exe python_spider 安装后可以看到New python executable in C:\\Users\\u243216\\Envs\\python_spider\\Scripts\\python.exe这样的提示；可以在C:\\Users\\u243216\\Envs看到所建的虚拟环境python_spider")]),t._v(" "),s("li",[t._v("workon 列出所有的虚拟环境， 进入虚拟环境也是使用workon， 退出虚拟环境deactivate")]),t._v(" "),s("li",[t._v("删除虚拟环境，到C:\\Users\\u243216\\Envs下删除对应的文件夹就可以了")]),t._v(" "),s("li",[t._v("workon '虚拟环境' 进去后, 输入python就是这个虚拟环境下的python版本了")]),t._v(" "),s("li",[t._v("在pycharm中的settings->Project Interpreter中可以为项目选择刚才建立的虚拟环境。在Virtualenv Environment -> Existing environment -> Interpreter指向'C:\\Users\\u243216\\Envs\\python_spider\\Scripts\\python.exe'虚拟环境python_spider")])])])}),[],!1,null,null,null);n.default=e.exports}}]);